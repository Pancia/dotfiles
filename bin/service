#!/usr/bin/env ruby

require "cli.rb"

require "shellwords"

$home_dir = "/Users/#{%x[whoami].strip}/"
$services_dir = "./dotfiles/services/"

def log_for(name)
  "#{$home_dir}/#{$service_dir}/#{name}.log"
end

def execute(cmd)
  puts cmd if $options[:verbose]
  system(cmd)
end

class ServiceCMDS
  def self.list(opts)
    opts.info = "List my services"
    lambda { execute("launchctl list | ag org.pancia") }
  end
  def self.start(opts)
    opts.info = "Start a service."
    lambda { |name|
      execute("")
    }
  end
  def self.stop(opts)
    opts.info = "Stop a service."
    lambda { |name|
      execute("")
    }
  end
  def self.restart(opts)
    opts.info = "Restart a service."
    lambda { |name|
      self.stop(name)
      self.start(name)
    }
  end
  def self.status(opts)
    opts.info = "status of all services"
    lambda {
      execute("")
    }
  end
  def self.log(opts)
    opts.info = "Show the logs for a service."
    lambda { |name|
      # Become that process, so we can  to stop +F paging & look around with less
      Kernel.exec("command less +GF #{log_for(name)}")
    }
  end
end

CLI.parse! ServiceCMDS
